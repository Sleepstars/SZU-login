name: Go CI/CD

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.20'  # 使用较新的 Go 版本
      - name: Check out code
        uses: actions/checkout@v4
      - name: Run tests
        run: |
          go test -v ./...
  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: darwin
            goarch: arm64 # macOS arm64 构建需要 macOS runner
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.20'
      - name: Check out code
        uses: actions/checkout@v4
      - name: Build binary
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o szu-login-${{ matrix.goos }}-${{ matrix.goarch }} .
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: szu-login-${{ matrix.goos }}-${{ matrix.goarch }}
          path: szu-login-${{ matrix.goos }}-${{ matrix.goarch }}
  build-macos-arm64:
    name: Build macOS arm64
    needs: test
    runs-on: macos-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.20'
      - name: Check out code
        uses: actions/checkout@v4
      - name: Build binary
        run: |
          GOOS=darwin GOARCH=arm64 go build -o szu-login-darwin-arm64 .
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: szu-login-darwin-arm64
          path: szu-login-darwin-arm64
